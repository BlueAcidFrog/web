(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{228:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(8),a=(n(0),n(568)),i={id:"index",slug:"/",title:"ORY Hydra",sidebar_label:"Introduction"},s={unversionedId:"index",id:"version-v1.10/index",isDocsHomePage:!1,title:"ORY Hydra",description:"Hydra is an OAuth 2.0 and OpenID Connect Provider. In other words, an",source:"@site/versioned_docs/version-v1.10/index.md",slug:"/",permalink:"/hydra/docs/",editUrl:"https://github.com/ory/hydra/edit/master/docs/versioned_docs/version-v1.10/index.md",version:"v1.10",sidebar_label:"Introduction",sidebar:"version-v1.10/docs",next:{title:"5 Minute Tutorial",permalink:"/hydra/docs/5min-tutorial"}},c=[{value:"Flexible User Management",id:"flexible-user-management",children:[]},{value:"OpenID Certified",id:"openid-certified",children:[]},{value:"Cryptographic Key Storage",id:"cryptographic-key-storage",children:[]},{value:"Security First",id:"security-first",children:[]},{value:"High Performance",id:"high-performance",children:[]},{value:"Developer Friendly",id:"developer-friendly",children:[]},{value:"Limitations",id:"limitations",children:[]},{value:"Is ORY Hydra the right fit for you?",id:"is-ory-hydra-the-right-fit-for-you",children:[]},{value:"Other solutions",id:"other-solutions",children:[]}],l={toc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Hydra is an OAuth 2.0 and OpenID Connect Provider. In other words, an\nimplementation of the OAuth 2.0 Authorization Framework as well as the OpenID\nConnect Core 1.0 framework. As such, it issues OAuth 2.0 Access, Refresh, and ID\nTokens that enable third-parties to access your APIs in the name of your users."),Object(a.b)("h2",{id:"flexible-user-management"},"Flexible User Management"),Object(a.b)("p",null,'One of ORY Hydra\'s biggest advantages is that unlike other OAuth 2.0\nimplementations, it implements the OAuth and OpenID Connect standard without\nforcing you to use a "Hydra User Management" (login, logout, profile management,\nregistration), a particular template engine, or a predefined front-end.'),Object(a.b)("p",null,"This allows you to implement user management and login your way, in your\ntechnology stack, with authentication mechanisms required by your use case\n(token-based 2FA, SMS 2FA, etc). You can of course use existing solutions like\n",Object(a.b)("a",{parentName:"p",href:"https://github.com/go-authboss/authboss"},"authboss")," or\n",Object(a.b)("a",{parentName:"p",href:"https://auth0.com/"},"auth0.com"),". It provides you all the benefits of OAuth 2.0\nand OpenID Connect while being minimally invasive to your business logic and\ntechnology stack."),Object(a.b)("h2",{id:"openid-certified"},"OpenID Certified"),Object(a.b)("p",null,"ORY Hydra is a\n",Object(a.b)("a",{parentName:"p",href:"https://openid.net/developers/certified/"},"Certified OpenID Provider Server")," and\nimplements all the requirements stated by the OpenID Foundation. In particular,\nit correctly implements the various OAuth 2.0 and OpenID Connect flows specified\nby the IETF and OpenID Foundation."),Object(a.b)("h2",{id:"cryptographic-key-storage"},"Cryptographic Key Storage"),Object(a.b)("p",null,"In addition to the OAuth 2.0 functionality, ORY Hydra offers a safe storage for\ncryptographic keys (used for example to sign JSON Web Tokens) and can manage\nOAuth 2.0 Clients."),Object(a.b)("h2",{id:"security-first"},"Security First"),Object(a.b)("p",null,"ORY Hydra's architecture and work flows are designed to neutralize many common\n(OWASP TOP TEN) and uncommon attack vectors.\n",Object(a.b)("a",{parentName:"p",href:"https://www.ory.sh/docs/guides/master/hydra/5-security/"},"Learn more"),"."),Object(a.b)("h2",{id:"high-performance"},"High Performance"),Object(a.b)("p",null,"Hydra has a low CPU and memory footprint, short start-up time, and scales\neffortlessly up and down on many platforms including Heroku, Cloud Foundry,\nDocker, Google Container Engine, and others."),Object(a.b)("h2",{id:"developer-friendly"},"Developer Friendly"),Object(a.b)("p",null,"Hydra is available for all popular platforms including Linux, OSX and Windows.\nIt ships as a single binary without any additional dependencies. For further\nsimplicity, it is available as a\n",Object(a.b)("a",{parentName:"p",href:"https://hub.docker.com/r/oryd/hydra/"},"Docker Image"),"."),Object(a.b)("p",null,"Hydra also provides a developer-friendly CLI."),Object(a.b)("h2",{id:"limitations"},"Limitations"),Object(a.b)("p",null,"Hydra has a few limitations too:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"ORY Hydra does not manage user accounts, i.e. user registration, password\nreset, user login, sending confirmation emails, etc. In Hydra's architecture,\nthe ",Object(a.b)("em",{parentName:"li"},"Identity Provider")," is responsible for this."),Object(a.b)("li",{parentName:"ol"},"ORY Hydra doesn't support the OAuth 2.0 Resource Owner Password Credentials\nflow because it is legacy, discouraged, and insecure.")),Object(a.b)("h2",{id:"is-ory-hydra-the-right-fit-for-you"},"Is ORY Hydra the right fit for you?"),Object(a.b)("p",null,"OAuth 2.0 can be used in many environments for various purposes. This list might\nhelp you decide if OAuth 2.0 and Hydra are the right fit for a use case:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"enable third-party solutions to access to your APIs: This is what an OAuth2\nProvider does, Hydra is a perfect fit."),Object(a.b)("li",{parentName:"ol"},"be an Identity Provider like Google, Facebook, or Microsoft: OpenID Connect\nand thus Hydra is a perfect fit."),Object(a.b)("li",{parentName:"ol"},"enable your browser, mobile, or wearable applications to access your APIs:\nRunning an OAuth2 Provider can work great for this. You don't have to store\npasswords on the device and can revoke access tokens at any time. GMail\nlogins work this way."),Object(a.b)("li",{parentName:"ol"},"you want to limit what type of information your backend services can read\nfrom each other. For example, the ",Object(a.b)("em",{parentName:"li"},"comment service")," should only be allowed to\nfetch user profile updates but shouldn't be able to read user passwords.\nOAuth 2.0 might make sense for you.")),Object(a.b)("h2",{id:"other-solutions"},"Other solutions"),Object(a.b)("p",null,"If all you need is a library or SDKs that implements OAuth 2.0, take a look at\n",Object(a.b)("a",{parentName:"p",href:"https://github.com/ory/fosite"},"fosite")," or\n",Object(a.b)("a",{parentName:"p",href:"https://github.com/oauthjs/node-oauth2-server"},"node-oauth2-server"),"."),Object(a.b)("p",null,"If you need a more fully featured identity solution including user management\nand user interfaces, those exist in the form of\n",Object(a.b)("a",{parentName:"p",href:"https://www.keycloak.org"},"Keycloak")," or ",Object(a.b)("a",{parentName:"p",href:"https://www.okta.com"},"Okta"),"."))}u.isMDXComponent=!0},568:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},h=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),h=r,b=d["".concat(i,".").concat(h)]||d[h]||p[h]||a;return n?o.a.createElement(b,s(s({ref:t},l),{},{components:n})):o.a.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);